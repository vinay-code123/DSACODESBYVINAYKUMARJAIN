 vector<int> spirallyTraverse(vector<vector<int> > matrix, int r, int c) 
    {
        // code here 
        vector<int> ans;
    
        int count = 0;
        int total = r*c;
        
        int startingRow = 0;
        int startingCol = 0;
        int endingRow = r-1;
        int endingCol = c-1;
    
    
    while(count < total){
        
            for(int index= startingRow;count < total && index<=endingCol;index++){
                // cout << matrix[startingRow][index];
                ans.push_back(matrix[startingRow][index]);
                count++;
            }
            startingRow++;
            
            for(int index= startingRow;count < total && index<=endingRow;index++){
                // cout << matrix[index][endingCol];
                ans.push_back(matrix[index][endingCol]);
                count++;
            }
            endingCol--;
            
            
            for(int index= endingCol; count < total && index>=startingCol;index--){
                // cout << matrix[endingCol][index];
                ans.push_back(matrix[endingRow][index]);
                count++;
            }
            endingRow--;
            
            for(int index= endingRow; count < total && index>=startingRow;index--){
                // cout << matrix[index][startingRow];
                ans.push_back(matrix[index][startingCol]);
                count++;
            }
            startingCol++;
        }
        return ans;
    }
