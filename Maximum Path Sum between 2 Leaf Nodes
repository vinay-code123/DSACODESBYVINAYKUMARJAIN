class Solution {
public:
int solve(Node* root, int &ans)
    {
        if (root==NULL)
            return 0;
            
        int l = solve(root->left,ans);
        int r = solve(root->right,ans);
        
        if (root->left!=NULL && root->right!=NULL)
        {
            ans = max(ans, l+r+root->data);
            return max(l+root->data, r+root->data);
        }
        
        if (root->left==NULL && root->right==NULL)
            return root->data;
        
        if (root->right==NULL)
            return root->data + l;
            
        if (root->left==NULL)
            return root->data + r;
        
    }
    int maxPathSum(Node* root)
    {
        // code here
        if (root==NULL)
            return 0;
            
        if (root->right==NULL && root->left==NULL)
            return root->data;
            
        int ans = INT_MIN;
        int x = solve(root,ans);
        
        if (root->left == NULL || root->right == NULL)
            return max(ans,x);
        return ans;
        // code here
    }
};
