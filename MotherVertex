class Solution 
{
    private:
    void dfs(int node,vector<int> adj[],vector<int> &vis,stack<int> &st){
        vis[node] = 1;
        for(auto it : adj[node]){
            if(!vis[it]) dfs(it,adj,vis,st);
        }
        st.push(node);
    }
    void dfs1(int node,vector<int> adj[],vector<int> &vis){
        vis[node] = 1;
        for(auto it : adj[node]){
            if(!vis[it]) dfs1(it,adj,vis);
        }
    }
    public:
    //Function to find a Mother Vertex in the Graph.
	int findMotherVertex(int v, vector<int>adj[])
	{
	    // Code here
	      // step1 : find toposort
	    vector<int> vis(v);
	    stack<int> st;
	    for(int i=0;i<v;i++){
	        if(!vis[i]) dfs(i,adj,vis,st);
	    }
	    
	    // reset vis array
	    fill(vis.begin(),vis.end(),0);
	    
	    // check stack's top is mother vertex or not
	    dfs1(st.top(),adj,vis);
	    
	   // if it is mother vertex
	    int sum = accumulate(vis.begin(),vis.end(),0);
	    
	    return sum == v ? st.top() : -1;
	}

};
