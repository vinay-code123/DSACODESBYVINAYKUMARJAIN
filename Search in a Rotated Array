 int search(int a[], int l, int h, int key){
    //complete the function here
    
   /* int count =0;
    for(int i =l;i<=h;i++)
    {
        if(A[i]<A[i+1])
        {
            count++;
        }
        else
        {
            break;
        }
    }
    cout<<count<<endl;
    int left1 = l;
    int right1 = count;
    int flag1 = 0;
    
    while(left1<right1)
    {
        int mid = (left1+right1)/2;
        if(A[mid]==key)
        {
            flag1=1;
            return mid;
        }
        if(A[mid] > key)
        {
            left1 = mid+1;
        }
        else{
            right1 = mid-1;
        }
    }
    
    int left2 = count+1;;
    int right2 = h;
    int flag2 = 0;
    while(left2<right2)
    {
        int mid = (left2+right2)/2;
        if(A[mid]==key)
        {
            flag2 = 1;
            return mid;
        }
        if(A[mid] > key)
        {
            left2 = mid+1;
        }
        else{
            right2 = mid-1;
        }
    }
  
    }*/
    while(l<=h){
            int m=(l+h)/2;
            if(a[m]==key){
                return m;
            }
            else if(a[l]<=a[m]){
                //left part is sorted ...a[l]<=key<=a[m]
                if(a[l]<=key && key<=a[m]){
                    //answer lies in the left part..
                    h=m-1;
                }
                else
                    l=m+1;  
            }
            else{
                //right part is sorted...a[m]<=key<=a[h]
                if(a[m]<=key && key<=a[h]){
                    //answer lies in the right part
                    l=m+1;
                }
                else
                   h=m-1;
            }
        }
        return -1;
    }
};
